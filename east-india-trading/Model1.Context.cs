//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace east_india_trading
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class masterEntities : DbContext
    {
        public masterEntities()
            : base("name=masterEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<sysdac_history_internal> sysdac_history_internal { get; set; }
        public virtual DbSet<sysdac_instances_internal> sysdac_instances_internal { get; set; }
        public virtual DbSet<sysdac_instances> sysdac_instances { get; set; }
        public virtual DbSet<bandwidth_usage> bandwidth_usage { get; set; }
        public virtual DbSet<billing> billings { get; set; }
        public virtual DbSet<database_connection_stats> database_connection_stats { get; set; }
        public virtual DbSet<database_error_stats> database_error_stats { get; set; }
        public virtual DbSet<database_firewall_rules> database_firewall_rules { get; set; }
        public virtual DbSet<database_usage> database_usage { get; set; }
        public virtual DbSet<dm_database_copies> dm_database_copies { get; set; }
        public virtual DbSet<elastic_pool_resource_stats> elastic_pool_resource_stats { get; set; }
        public virtual DbSet<event_history_log> event_history_log { get; set; }
        public virtual DbSet<event_log> event_log { get; set; }
        public virtual DbSet<firewall_rules> firewall_rules { get; set; }
        public virtual DbSet<geo_replication_links> geo_replication_links { get; set; }
        public virtual DbSet<resource_stats> resource_stats { get; set; }
        public virtual DbSet<resource_stats_ex> resource_stats_ex { get; set; }
        public virtual DbSet<resource_usage_ex> resource_usage_ex { get; set; }
        public virtual DbSet<sql_logins> sql_logins { get; set; }
    
        public virtual int sp_sysdac_add_history_entry(Nullable<int> sequence_id, Nullable<System.Guid> instance_id, Nullable<byte> action_type, Nullable<byte> action_status, Nullable<byte> dac_object_type, Nullable<bool> required, string dac_object_name_pretran, string dac_object_name_posttran, string sqlscript, byte[] payload, string comments, string error_string, ObjectParameter action_id)
        {
            var sequence_idParameter = sequence_id.HasValue ?
                new ObjectParameter("sequence_id", sequence_id) :
                new ObjectParameter("sequence_id", typeof(int));
    
            var instance_idParameter = instance_id.HasValue ?
                new ObjectParameter("instance_id", instance_id) :
                new ObjectParameter("instance_id", typeof(System.Guid));
    
            var action_typeParameter = action_type.HasValue ?
                new ObjectParameter("action_type", action_type) :
                new ObjectParameter("action_type", typeof(byte));
    
            var action_statusParameter = action_status.HasValue ?
                new ObjectParameter("action_status", action_status) :
                new ObjectParameter("action_status", typeof(byte));
    
            var dac_object_typeParameter = dac_object_type.HasValue ?
                new ObjectParameter("dac_object_type", dac_object_type) :
                new ObjectParameter("dac_object_type", typeof(byte));
    
            var requiredParameter = required.HasValue ?
                new ObjectParameter("required", required) :
                new ObjectParameter("required", typeof(bool));
    
            var dac_object_name_pretranParameter = dac_object_name_pretran != null ?
                new ObjectParameter("dac_object_name_pretran", dac_object_name_pretran) :
                new ObjectParameter("dac_object_name_pretran", typeof(string));
    
            var dac_object_name_posttranParameter = dac_object_name_posttran != null ?
                new ObjectParameter("dac_object_name_posttran", dac_object_name_posttran) :
                new ObjectParameter("dac_object_name_posttran", typeof(string));
    
            var sqlscriptParameter = sqlscript != null ?
                new ObjectParameter("sqlscript", sqlscript) :
                new ObjectParameter("sqlscript", typeof(string));
    
            var payloadParameter = payload != null ?
                new ObjectParameter("payload", payload) :
                new ObjectParameter("payload", typeof(byte[]));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("comments", comments) :
                new ObjectParameter("comments", typeof(string));
    
            var error_stringParameter = error_string != null ?
                new ObjectParameter("error_string", error_string) :
                new ObjectParameter("error_string", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_sysdac_add_history_entry", sequence_idParameter, instance_idParameter, action_typeParameter, action_statusParameter, dac_object_typeParameter, requiredParameter, dac_object_name_pretranParameter, dac_object_name_posttranParameter, sqlscriptParameter, payloadParameter, commentsParameter, error_stringParameter, action_id);
        }
    
        public virtual int sp_sysdac_add_instance(string type_name, Nullable<System.Guid> instance_id, string instance_name, string type_version, string description, byte[] type_stream)
        {
            var type_nameParameter = type_name != null ?
                new ObjectParameter("type_name", type_name) :
                new ObjectParameter("type_name", typeof(string));
    
            var instance_idParameter = instance_id.HasValue ?
                new ObjectParameter("instance_id", instance_id) :
                new ObjectParameter("instance_id", typeof(System.Guid));
    
            var instance_nameParameter = instance_name != null ?
                new ObjectParameter("instance_name", instance_name) :
                new ObjectParameter("instance_name", typeof(string));
    
            var type_versionParameter = type_version != null ?
                new ObjectParameter("type_version", type_version) :
                new ObjectParameter("type_version", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var type_streamParameter = type_stream != null ?
                new ObjectParameter("type_stream", type_stream) :
                new ObjectParameter("type_stream", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_sysdac_add_instance", type_nameParameter, instance_idParameter, instance_nameParameter, type_versionParameter, descriptionParameter, type_streamParameter);
        }
    
        public virtual int sp_sysdac_delete_instance(Nullable<System.Guid> instance_id)
        {
            var instance_idParameter = instance_id.HasValue ?
                new ObjectParameter("instance_id", instance_id) :
                new ObjectParameter("instance_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_sysdac_delete_instance", instance_idParameter);
        }
    
        public virtual ObjectResult<sp_sysdac_drop_database_Result> sp_sysdac_drop_database(string database_name)
        {
            var database_nameParameter = database_name != null ?
                new ObjectParameter("database_name", database_name) :
                new ObjectParameter("database_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_sysdac_drop_database_Result>("sp_sysdac_drop_database", database_nameParameter);
        }
    
        public virtual int sp_sysdac_ensure_dac_creator()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_sysdac_ensure_dac_creator");
        }
    
        public virtual int sp_sysdac_rename_database(string database_name, string new_name)
        {
            var database_nameParameter = database_name != null ?
                new ObjectParameter("database_name", database_name) :
                new ObjectParameter("database_name", typeof(string));
    
            var new_nameParameter = new_name != null ?
                new ObjectParameter("new_name", new_name) :
                new ObjectParameter("new_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_sysdac_rename_database", database_nameParameter, new_nameParameter);
        }
    
        public virtual int sp_sysdac_resolve_pending_entry(Nullable<int> action_id, Nullable<int> sequence_id)
        {
            var action_idParameter = action_id.HasValue ?
                new ObjectParameter("action_id", action_id) :
                new ObjectParameter("action_id", typeof(int));
    
            var sequence_idParameter = sequence_id.HasValue ?
                new ObjectParameter("sequence_id", sequence_id) :
                new ObjectParameter("sequence_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_sysdac_resolve_pending_entry", action_idParameter, sequence_idParameter);
        }
    
        public virtual int sp_sysdac_rollback_all_pending_objects(Nullable<byte> return_scripts)
        {
            var return_scriptsParameter = return_scripts.HasValue ?
                new ObjectParameter("return_scripts", return_scripts) :
                new ObjectParameter("return_scripts", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_sysdac_rollback_all_pending_objects", return_scriptsParameter);
        }
    
        public virtual ObjectResult<sp_sysdac_rollback_committed_step_Result> sp_sysdac_rollback_committed_step(Nullable<int> action_id, Nullable<int> sequence_id)
        {
            var action_idParameter = action_id.HasValue ?
                new ObjectParameter("action_id", action_id) :
                new ObjectParameter("action_id", typeof(int));
    
            var sequence_idParameter = sequence_id.HasValue ?
                new ObjectParameter("sequence_id", sequence_id) :
                new ObjectParameter("sequence_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_sysdac_rollback_committed_step_Result>("sp_sysdac_rollback_committed_step", action_idParameter, sequence_idParameter);
        }
    
        public virtual ObjectResult<sp_sysdac_rollback_pending_object_Result> sp_sysdac_rollback_pending_object(Nullable<int> action_id)
        {
            var action_idParameter = action_id.HasValue ?
                new ObjectParameter("action_id", action_id) :
                new ObjectParameter("action_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_sysdac_rollback_pending_object_Result>("sp_sysdac_rollback_pending_object", action_idParameter);
        }
    
        public virtual int sp_sysdac_setreadonly_database(string database_name, Nullable<bool> @readonly)
        {
            var database_nameParameter = database_name != null ?
                new ObjectParameter("database_name", database_name) :
                new ObjectParameter("database_name", typeof(string));
    
            var readonlyParameter = @readonly.HasValue ?
                new ObjectParameter("readonly", @readonly) :
                new ObjectParameter("readonly", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_sysdac_setreadonly_database", database_nameParameter, readonlyParameter);
        }
    
        public virtual int sp_sysdac_update_history_entry(Nullable<int> action_id, Nullable<System.Guid> instance_id, Nullable<byte> action_type, Nullable<byte> dac_object_type, Nullable<byte> action_status, string dac_object_name_pretran, string dac_object_name_posttran, string sqlscript, string error_string)
        {
            var action_idParameter = action_id.HasValue ?
                new ObjectParameter("action_id", action_id) :
                new ObjectParameter("action_id", typeof(int));
    
            var instance_idParameter = instance_id.HasValue ?
                new ObjectParameter("instance_id", instance_id) :
                new ObjectParameter("instance_id", typeof(System.Guid));
    
            var action_typeParameter = action_type.HasValue ?
                new ObjectParameter("action_type", action_type) :
                new ObjectParameter("action_type", typeof(byte));
    
            var dac_object_typeParameter = dac_object_type.HasValue ?
                new ObjectParameter("dac_object_type", dac_object_type) :
                new ObjectParameter("dac_object_type", typeof(byte));
    
            var action_statusParameter = action_status.HasValue ?
                new ObjectParameter("action_status", action_status) :
                new ObjectParameter("action_status", typeof(byte));
    
            var dac_object_name_pretranParameter = dac_object_name_pretran != null ?
                new ObjectParameter("dac_object_name_pretran", dac_object_name_pretran) :
                new ObjectParameter("dac_object_name_pretran", typeof(string));
    
            var dac_object_name_posttranParameter = dac_object_name_posttran != null ?
                new ObjectParameter("dac_object_name_posttran", dac_object_name_posttran) :
                new ObjectParameter("dac_object_name_posttran", typeof(string));
    
            var sqlscriptParameter = sqlscript != null ?
                new ObjectParameter("sqlscript", sqlscript) :
                new ObjectParameter("sqlscript", typeof(string));
    
            var error_stringParameter = error_string != null ?
                new ObjectParameter("error_string", error_string) :
                new ObjectParameter("error_string", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_sysdac_update_history_entry", action_idParameter, instance_idParameter, action_typeParameter, dac_object_typeParameter, action_statusParameter, dac_object_name_pretranParameter, dac_object_name_posttranParameter, sqlscriptParameter, error_stringParameter);
        }
    
        public virtual int sp_sysdac_upgrade_instance(Nullable<System.Guid> source_instance_id, Nullable<System.Guid> instance_id, string instance_name, string database_name)
        {
            var source_instance_idParameter = source_instance_id.HasValue ?
                new ObjectParameter("source_instance_id", source_instance_id) :
                new ObjectParameter("source_instance_id", typeof(System.Guid));
    
            var instance_idParameter = instance_id.HasValue ?
                new ObjectParameter("instance_id", instance_id) :
                new ObjectParameter("instance_id", typeof(System.Guid));
    
            var instance_nameParameter = instance_name != null ?
                new ObjectParameter("instance_name", instance_name) :
                new ObjectParameter("instance_name", typeof(string));
    
            var database_nameParameter = database_name != null ?
                new ObjectParameter("database_name", database_name) :
                new ObjectParameter("database_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_sysdac_upgrade_instance", source_instance_idParameter, instance_idParameter, instance_nameParameter, database_nameParameter);
        }
    
        public virtual int sp_add_database_events()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_add_database_events");
        }
    
        public virtual int sp_cleanup_database_event_update_history_table(Nullable<int> expire_history_after_hours, Nullable<int> num_elem_to_del)
        {
            var expire_history_after_hoursParameter = expire_history_after_hours.HasValue ?
                new ObjectParameter("expire_history_after_hours", expire_history_after_hours) :
                new ObjectParameter("expire_history_after_hours", typeof(int));
    
            var num_elem_to_delParameter = num_elem_to_del.HasValue ?
                new ObjectParameter("num_elem_to_del", num_elem_to_del) :
                new ObjectParameter("num_elem_to_del", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_cleanup_database_event_update_history_table", expire_history_after_hoursParameter, num_elem_to_delParameter);
        }
    
        public virtual int sp_cleanup_database_events(Nullable<int> expire_after_days, Nullable<int> expire_after_events, Nullable<int> expire_history_after_hours)
        {
            var expire_after_daysParameter = expire_after_days.HasValue ?
                new ObjectParameter("expire_after_days", expire_after_days) :
                new ObjectParameter("expire_after_days", typeof(int));
    
            var expire_after_eventsParameter = expire_after_events.HasValue ?
                new ObjectParameter("expire_after_events", expire_after_events) :
                new ObjectParameter("expire_after_events", typeof(int));
    
            var expire_history_after_hoursParameter = expire_history_after_hours.HasValue ?
                new ObjectParameter("expire_history_after_hours", expire_history_after_hours) :
                new ObjectParameter("expire_history_after_hours", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_cleanup_database_events", expire_after_daysParameter, expire_after_eventsParameter, expire_history_after_hoursParameter);
        }
    
        public virtual int sp_cleanup_database_events_table(Nullable<int> expire_after_days, Nullable<int> expire_after_events, Nullable<int> num_elem_to_del)
        {
            var expire_after_daysParameter = expire_after_days.HasValue ?
                new ObjectParameter("expire_after_days", expire_after_days) :
                new ObjectParameter("expire_after_days", typeof(int));
    
            var expire_after_eventsParameter = expire_after_events.HasValue ?
                new ObjectParameter("expire_after_events", expire_after_events) :
                new ObjectParameter("expire_after_events", typeof(int));
    
            var num_elem_to_delParameter = num_elem_to_del.HasValue ?
                new ObjectParameter("num_elem_to_del", num_elem_to_del) :
                new ObjectParameter("num_elem_to_del", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_cleanup_database_events_table", expire_after_daysParameter, expire_after_eventsParameter, num_elem_to_delParameter);
        }
    }
}
